input {
  udp {
    port => 9003
    tags => ["cisco-ise"]
  }
}

filter {
  if "cisco-ise" in [tags] {
    # >> Parse Remote Syslog Message Format <<
    # see https://www.cisco.com/c/en/us/td/docs/security/ise/syslog/Cisco_ISE_Syslogs/m_IntrotoSyslogs.pdf for reference
    grok {
      pattern_definitions => {
        "MYDATE" => "%{MONTH} %{MONTHDAY} %{TIME}"
      }
      match => {
        "message" => "%{MYDATE:ise_timestamp} %{SYSLOGHOST:ise_hostname} %{NOTSPACE:ise_category} %{NUMBER:ise_msg_id} %{NUMBER:ise_total_seg:int} %{INT:ise_seg_number:int} %{GREEDYDATA:data}"
      }
    }

    # >> Concatenate Syslog Lines <<
    # see Example 4 on https://www.elastic.co/guide/en/logstash/current/plugins-filters-aggregate.html for reference
    aggregate {
      task_id => "%{ise_msg_id}"
      code => '
        map["ise_timestamp"] = event.get("ise_timestamp")
        map["ise_hostname"] = event.get("ise_hostname")
        map["ise_category"] = event.get("ise_category")
        map["ise_msg_id"] ||= event.get("ise_msg_id")
        map["ise_total_seg"] = event.get("ise_total_seg")
        map["ise_seg_number"] = event.get("ise_seg_number")
        map["message"] ||= ""
        map["message"] += event.get("data")
        map["tags"] = event.get("tags")
        event.cancel()
      '
      push_previous_map_as_event => true
      timeout => 3
    }

    # >> Parse Local Store Syslog Message Format <<
    # see https://www.cisco.com/c/en/us/td/docs/security/ise/syslog/Cisco_ISE_Syslogs/m_IntrotoSyslogs.pdf for reference
    grok {
      pattern_definitions => {
        "MYTIMESTAMP" => "%{YEAR}-%{MONTHNUM}-%{MONTHDAY}[T ]%{HOUR}:?%{MINUTE}(?::?%{SECOND}) %{ISO8601_TIMEZONE}"
        "MYDATA" => "[a-zA-Z0-9-_(\s)]+"
      }
      match => {
        "message" => "%{MYTIMESTAMP:timestamp} %{NUMBER:seq_number} %{NUMBER:msg_code} %{LOGLEVEL:severity} %{MYDATA:msg_class}: %{MYDATA:msg_event}, %{GREEDYDATA}"
      }
    }

    # >> Extract Key Value Pairs <<
    # see https://www.elastic.co/guide/en/logstash/current/plugins-filters-kv.html for reference
    kv {
      exclude_keys => ["Step", "StepData"]
      field_split => ","
      trim_key => " "
      remove_char_value => "[{}\\]"
    }

    # >> Remove Message Field <<
    # see https://www.elastic.co/guide/en/logstash/current/plugins-filters-mutate.html for reference
    mutate {
      remove_field => [ "message" ]
    }
  }
}

output {
  stdout {
    codec => rubydebug {}
  }
}
